name: Run tests

on:
  pull_request:
    paths:
    - '**.py'
    - pyproject.toml
    - tox.ini



jobs:
  check_version:
    runs-on: ubuntu-latest
    env:
      VERSION_FILE_PATH: src/scaffold/__version__.py

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: source

      - name: Checkout destination
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: destination

      - name: Check version
        run: |
          # Check semver by turning it into a 7 digit int for comparison
          function semver_to_int { echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'; }

          source_version=$(head "source/$VERSION_FILE_PATH" -n 1 | cut -d "'" -f 2)
          destination_version=$(head "destination/$VERSION_FILE_PATH" -n 1 | cut -d "'" -f 2)

          if [ "$(semver_to_int "$destination_version")" -ge "$(semver_to_int "$source_version")" ]; then
              echo -e "\e[31;1mError:\e[0m Version needs incrementing!"
              echo "  Merge target is: $destination_version"
              echo "  Current branch is: $source_version"
              exit 1
          fi


  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.11']
    env:
      FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install requirements
        run: pip install -e .[dev]

      - name: Run Tox
        run: tox


  build:
    needs: [check_version, run_tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Calculate dynamic args
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "BRANCH_SHA=$(echo -n "$BRANCH_NAME" | sha256sum | head -c 7)" >> "$GITHUB_ENV"
          echo "CREATED=$(date --utc --rfc-3339=s)" >> "$GITHUB_ENV"
          echo "PACKAGE_VERSION=$(head "src/scaffold/__version__.py" -n 1 | cut -d "'" -f 2)" >> "$GITHUB_ENV"
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            CREATED=$CREATED
            GIT_HASH="${GITHUB_SHA}"
            PACKAGE_VERSION=$PACKAGE_VERSION
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          push: true
          tags:  ghcr.io/televate-au/scaffold:$PACKAGE_VERSION-$BRANCH_SHA
